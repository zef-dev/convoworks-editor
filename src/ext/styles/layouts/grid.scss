/*------------------------------------*\
# LAYOUT
\*------------------------------------*/

.layout {

	&--editor-content {
		width: 100%;
		max-width: 45.625rem;
	}
	
	&--main {
		width: 100%;
		//max-width: calc(305/375*100vw);
		margin-left: auto;
		margin-right: auto;
	}

	&--full {
		width: 100%;

		@include breakpoint($large) {
			margin-left: auto;
			margin-right: auto;
		}
	}
}

/*------------------------------------*\
# FLEX
\*------------------------------------*/

.flex {
	display: flex;
	align-items: center;
}

.flex--between {
	justify-content: space-between;
}

.flex--center {
	justify-content: center;
}

.no-wrap {
	flex-wrap: no-wrap;
}

.flex--gutters {
	margin-left: calc(#{$gutter} / -2);
	margin-right: calc(#{$gutter} / -2);
}

.flex--gutters>.cell {
	padding-left: calc(#{$gutter} / 2);
	padding-right: calc(#{$gutter} / 2);
}

.flex--gutters--double {
	margin-left: -$gutter;
	margin-right: -$gutter;
}

.flex--gutters--double>.cell {
	padding-left: $gutter;
	padding-right: $gutter;
}

.cell {
	box-sizing: border-box;
	display: none;
	max-width: 100%;
}

.cell--auto {
	flex: 1;
	grid-column: auto / span auto;
	display: block;
}

@for $i from 1 through 12 {
	.cell--#{$i} {
		flex-shrink: 0;
		flex-grow: 0;
		grid-column: auto / span #{$i};
		display: block;
	}
}

@each $key,
$value in $breakpoints {
	@include breakpoint($value) {
		@for $i from 1 through 12 {
			.cell--#{$i}--#{$key} {
				flex-shrink: 0;
				flex-grow: 0;
				grid-column: auto / span #{$i};
				display: block;
			}
		}
	}
}

/*------------------------------------*\
# CSS GRID
\*------------------------------------*/

.grid {
	display: grid;
	grid-template-columns: repeat(4, minmax(auto, 1fr));
	width: 100%;

	@include breakpoint($large) {
		grid-template-columns: repeat(12, minmax(auto, 1fr));
		grid-column-gap: $gutter;
	}
}

// grid columns

@each $key,
$value in $breakpoints {
	@include breakpoint($value) {
		@for $i from 1 through 12 {
			.grid--#{$i}--#{$key} {
				grid-template-columns: repeat(#{$i}, minmax(auto, 1fr));
			}
		}
	}
}

.grid--row-gap {
	@include breakpoint($large) {
		grid-row-gap: $gutter;
	}
}

@each $key,
$value in $breakpoints {
	@include breakpoint($value) {
		@for $i from 1 through 12 {
			.col--#{$i}--#{$key} {
				grid-column: span #{$i};
			}
		}
	}
}

/*------------------------------------*\
# MARGINS
\*------------------------------------*/

@each $key,
$value in $breakpoints {
	@include breakpoint($value) {
		@for $i from 0 through 100 {
			.margin--#{$i}--#{$key} {
				margin-bottom: calc((#{$i}/ 16) * 1rem);
			}

			.margin--r--#{$i}--#{$key} {
				margin-right: calc((#{$i}/ 16) * 1rem);
			}

			.margin--l--#{$i}--#{$key} {
				margin-right: calc((#{$i}/ 16) * 1rem);
			}
		}
	}
}

/*------------------------------------*\
# WIDTHS
\*------------------------------------*/

@each $key,
$value in $breakpoints {
	@include breakpoint($value) {
		@for $i from 1 through 100 {
			.width--#{$i}--#{$key} {
				width: calc((#{$i}/ 16) * 1rem);
			}
		}
	}
}

/*------------------------------------*\
# HIDE AND SHOW
\*------------------------------------*/

@each $key,
$value in $breakpoints {
	@include breakpoint($value) {
		.hide--#{$key} {
			display: none;
		}
	}
}

@each $key,
$value in $breakpoints {
	@include breakpoint($value) {
		.show--#{$key} {
			display: block;
		}
	}
}

.notification {
	position: fixed;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 3rem;
	text-align: center;
	font-size: 0.875rem;
	background: $color-primary;
	color: $white--true;
	font-weight: $semibold;
	display: flex;
	align-items: center;
	justify-content: center;
	transform: translateY(100%);
	transition: $transition-time;
	transition-timing-function: ease-in-out;
	cursor: pointer;
	
	&:hover {
		background: lighten($color-primary, $amount: 5%);
	}
}

.notification--show {
	transform: translateY(0);
}